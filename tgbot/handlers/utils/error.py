import logging
import traceback
import html

import telegram
from django.utils import timezone
from telegram import Update
from telegram.ext import CallbackContext
from users.models import UserActionLog, User
from dtb.settings import TELEGRAM_LOGS_CHAT_ID


def send_stacktrace_to_tg_chat(update: Update, context: CallbackContext) -> None:
    if 'email' in context.user_data:
        u = User.get_user(update, context)

    logging.error("–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", exc_info=context.error)

    tb_list = traceback.format_exception(None, context.error, context.error.__traceback__)
    tb_string = ''.join(tb_list)

    # Build the message with some markup and additional information about what happened.
    # You might need to add some logic to deal with messages longer than the 4096 character limit.
    message = (
        f'–í–æ–∑–Ω–∏–∫–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n'
        f'<pre>{html.escape(tb_string)}</pre>'
    )

    user_message = """
        üòî –ß—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å –≤–Ω—É—Ç—Ä–∏ –±–æ—Ç–∞.
        –ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–ª—É—á—à–∞–µ–º –Ω–∞—à —Å–µ—Ä–≤–∏—Å, –Ω–æ –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ–º –∑–∞–±—ã—Ç—å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –±–∞–∑–æ–≤—ã–µ –≤–µ—â–∏.
        –ú—ã —É–∂–µ —Ä–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É.
        –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start
    """
    context.bot.send_message(
        chat_id=update.message.from_user.id,
        text=user_message,
    )

    admin_message = f"‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è –¥–ª—è {update.message.from_user.id}:\n{message}"[:4090]
    if TELEGRAM_LOGS_CHAT_ID:
        context.bot.send_message(
            chat_id=TELEGRAM_LOGS_CHAT_ID,
            text=admin_message,
            parse_mode=telegram.ParseMode.HTML,
        )
    else:
        logging.error(admin_message)
